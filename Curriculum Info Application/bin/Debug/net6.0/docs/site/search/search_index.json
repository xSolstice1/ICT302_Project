{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Curriculum Info Application for ICT302 Project Description The project aims to develop an intuitive and user-friendly application that empowers end users, who may not have a technical background, to efficiently combine, filter, group, and manipulate data from CourseLoop reports and other common sources. The application simplifies the data consolidation process, eliminating the need for advanced Excel or Power Query skills. Users can easily create a unified dataset for their specific needs. Overall, this application serves as a user-friendly bridge between non-technical end users and complex data manipulation tasks, enabling them to efficiently work with curriculum information and other datasets without the need for advanced software skills. Authors @xSolstice1 [Software Developer] @Tay-CK [Software Developer] Muhammad Hafiz Bin Mohd Kassim [Project Manager] Kelly Ku [Security Consultant] Alexandria Lee [QA Manager] Cho Jia Foo [Secretary]","title":"Home"},{"location":"#project-description","text":"The project aims to develop an intuitive and user-friendly application that empowers end users, who may not have a technical background, to efficiently combine, filter, group, and manipulate data from CourseLoop reports and other common sources. The application simplifies the data consolidation process, eliminating the need for advanced Excel or Power Query skills. Users can easily create a unified dataset for their specific needs. Overall, this application serves as a user-friendly bridge between non-technical end users and complex data manipulation tasks, enabling them to efficiently work with curriculum information and other datasets without the need for advanced software skills.","title":"Project Description"},{"location":"#authors","text":"@xSolstice1 [Software Developer] @Tay-CK [Software Developer] Muhammad Hafiz Bin Mohd Kassim [Project Manager] Kelly Ku [Security Consultant] Alexandria Lee [QA Manager] Cho Jia Foo [Secretary]","title":"Authors"},{"location":"about/","text":"About Target Audience End Users: The primary audience for the application includes non-technical end users who need to access and analyze curriculum information. These users often lack expertise in data manipulation and advanced tools but require the ability to extract insights from data. Key Features Data Integration: The application allows end users to combine multiple CourseLoop reports and other datasets into a single unified file or table. Intuitive Interface: The user interface is designed to be user-friendly making it accessible to individuals with varying levels of technical proficiency. Data Manipulation: Users can apply data manipulation tasks such as filtering, grouping, and possibly other transformations, all within the application. Efficiency: The application streamlines the process of creating custom datasets, saving users time and effort. Simplified Reporting: Users can generate reports with ease, without requiring complex technical skills or software knowledge. Accessibility: The application is accessible to users who occasionally work with data and might not have the opportunity to become proficient in data analysis tools. Compatibility: The application should support various file formats, including CSV and XLSX, to accommodate different data sources. Empowerment: Empowers users to extract meaningful insights and create customized reports tailored to their specific requirements.","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"about/#target-audience","text":"End Users: The primary audience for the application includes non-technical end users who need to access and analyze curriculum information. These users often lack expertise in data manipulation and advanced tools but require the ability to extract insights from data.","title":"Target Audience"},{"location":"about/#key-features","text":"Data Integration: The application allows end users to combine multiple CourseLoop reports and other datasets into a single unified file or table. Intuitive Interface: The user interface is designed to be user-friendly making it accessible to individuals with varying levels of technical proficiency. Data Manipulation: Users can apply data manipulation tasks such as filtering, grouping, and possibly other transformations, all within the application. Efficiency: The application streamlines the process of creating custom datasets, saving users time and effort. Simplified Reporting: Users can generate reports with ease, without requiring complex technical skills or software knowledge. Accessibility: The application is accessible to users who occasionally work with data and might not have the opportunity to become proficient in data analysis tools. Compatibility: The application should support various file formats, including CSV and XLSX, to accommodate different data sources. Empowerment: Empowers users to extract meaningful insights and create customized reports tailored to their specific requirements.","title":"Key Features"},{"location":"files/","text":"Files HomeController.cs Import() Description: Runs DeleteIfFileExist() to delete XML files if already exist Return Type: IActionResults ProcessImport() ReadCsvAsync() ReadExcelAsync() SaveDataToXmlAsync() JoinTables() ProcessXml() GetFileSize() DeleteIfFileExist() Export() Index() Logout() Signup() Dashboard() LoginController.cs TransactionController.cs","title":"Files"},{"location":"files/#files","text":"","title":"Files"},{"location":"files/#homecontrollercs","text":"","title":"HomeController.cs"},{"location":"files/#import","text":"Description: Runs DeleteIfFileExist() to delete XML files if already exist Return Type: IActionResults","title":"Import()"},{"location":"files/#processimport","text":"","title":"ProcessImport()"},{"location":"files/#readcsvasync","text":"","title":"ReadCsvAsync()"},{"location":"files/#readexcelasync","text":"","title":"ReadExcelAsync()"},{"location":"files/#savedatatoxmlasync","text":"","title":"SaveDataToXmlAsync()"},{"location":"files/#jointables","text":"","title":"JoinTables()"},{"location":"files/#processxml","text":"","title":"ProcessXml()"},{"location":"files/#getfilesize","text":"","title":"GetFileSize()"},{"location":"files/#deleteiffileexist","text":"","title":"DeleteIfFileExist()"},{"location":"files/#export","text":"","title":"Export()"},{"location":"files/#index","text":"","title":"Index()"},{"location":"files/#logout","text":"","title":"Logout()"},{"location":"files/#signup","text":"","title":"Signup()"},{"location":"files/#dashboard","text":"","title":"Dashboard()"},{"location":"files/#logincontrollercs","text":"","title":"LoginController.cs"},{"location":"files/#transactioncontrollercs","text":"","title":"TransactionController.cs"},{"location":"userguide/","text":"User Guide Deploying Locally Clone the project git clone https://github.com/xSolstice1/ICT302_Project.git Go to the project directory cd my-project Install dependencies https://dotnet.microsoft.com/en-us/download [.NET 6.0] Start the server dotnet watch run Usage Login Screen Create an account if you have not done so, login with your credentials. Import Screen In the following screen, you may choose up to 2 files to import. Accepted File Formats: .csv/.xlsx Join Screen If you have selected 2 files, you will be brought to the join screen. You may select up to 2 pairs of keys to join, the 2nd set of key is optional and only used for concatenated join. Select the type of join you would like to perform on the files. Export Screen In the export screen, you can then manipulate the data by filtering them, selecting columns for export. Once done, click on Export to Excel button to save the data. Video Tutorial Your browser does not support the video tag.","title":"User-Guide"},{"location":"userguide/#user-guide","text":"","title":"User Guide"},{"location":"userguide/#deploying-locally","text":"Clone the project git clone https://github.com/xSolstice1/ICT302_Project.git Go to the project directory cd my-project Install dependencies https://dotnet.microsoft.com/en-us/download [.NET 6.0] Start the server dotnet watch run","title":"Deploying Locally"},{"location":"userguide/#usage","text":"","title":"Usage"},{"location":"userguide/#login-screen","text":"Create an account if you have not done so, login with your credentials.","title":"Login Screen"},{"location":"userguide/#import-screen","text":"In the following screen, you may choose up to 2 files to import. Accepted File Formats: .csv/.xlsx","title":"Import Screen"},{"location":"userguide/#join-screen","text":"If you have selected 2 files, you will be brought to the join screen. You may select up to 2 pairs of keys to join, the 2nd set of key is optional and only used for concatenated join. Select the type of join you would like to perform on the files.","title":"Join Screen"},{"location":"userguide/#export-screen","text":"In the export screen, you can then manipulate the data by filtering them, selecting columns for export. Once done, click on Export to Excel button to save the data.","title":"Export Screen"},{"location":"userguide/#video-tutorial","text":"Your browser does not support the video tag.","title":"Video Tutorial"}]}